# Use the latest 2.1 version of CircleCI pipeline process engine.a
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:

jobs:
  myjob1:

    docker:
      - image: cimg/base:stable

    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
          
  configure_infrastructure:
  
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: [bd:db:75:a7:62:8e:d4:fa:7e:8a:a8:00:e8:39:45:e8]
      - run: 
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Configure Server
          command: |
            ansible-playbook main-remote.yml -i inventory.txt
            
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity.com/"
            if curl -s --head ${URL}
            then
              return 0
            else
              return 1
               fi
          
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloud Formation Stack
          command: |
            aws cloudformation deploy \
            --template-file template.yml \
            --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
            --region us-east-1
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows

  create_and_deploy_frontend:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Execute bucket.yml
          command: |
            aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID:0:7} \
            --parameter-overrides MyBucketName="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"
#     - run: aws s3 sync . s3://mybucket-${CIRCLE_WORKFLOW_ID:0:7} --delete

  get_last_deployment_id:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: yum install -y tar gzip
      - run: 
          name: Fetch and save the old pipeline ID (bucket name) responsible for the last release.
          command: |
            aws cloudformation \
            list-exports --query "Exports[?Name==\'PipelineID\'].Value" \
            --no-paginate --output text > ~/textfile.txt
      - persist_to_workspace:
        root: ~/
        paths:
          - textfile.txt
workflows:
  my-workflow:
    jobs:
      - myjob1
#      - create_and_deploy_frontend
